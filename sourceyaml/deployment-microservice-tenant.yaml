---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant-service
  namespace: default
  labels:
    app: tenant-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tenant-service
  template:
    metadata:
      labels:
        app: tenant-service
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "tenant-service"
        dapr.io/app-port: "80"
        dapr.io/log-level: "info"
        dapr.io/sidecar-liveness-probe-period-seconds: "20"
        dapr.io/sidecar-readiness-probe-period-seconds: "20"
    spec:
      containers:
      - name: tenant-service
        image: {{ACR}}/tenant-service:latest
        imagePullPolicy: Always
        env:
        - name: SERILOG__MINIMUMLEVEL
          value: {{SERILOG__MINIMUMLEVEL}}
        - name: ASPNETCORE_FORWARDEDHEADERS_ENABLED
          value: "true"
        - name: ASPNETCORE_Kestrel__Certificates__Default__Password
          value: "5iccar"
        - name: ASPNETCORE_Kestrel__Certificates__Default__Path
          value: "default.pfx"
        - name: TENANTREPOSITORY__MONGODBSERVER
          valueFrom:
            secretKeyRef:
              name: tenantrepository
              key: repo
        - name: TENANTREPOSITORY__DATABASENAME
          value: "TenantService"
        - name: TENANTISSUER
          value: {{TENANTISSUER}}
        - name: DEFAULTTENANT
          value: "{{DEFAULTTENANT}}"
        - name: IdentityServer__IssuerName
          value: "{{ISSUERNAME}}"
        - name: APP__API__TOKEN
          valueFrom:
            secretKeyRef:
              name: app-api-token
              key: token
        - name: DaprSecret
          valueFrom:
            secretKeyRef:
              name: daprsecret
              key: secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m" 
          limits:
            memory: "640Mi"
            cpu: "500m"  
        volumeMounts:
          - name: keydata
            mountPath: "/app/data"
        ports:
        - containerPort: 80
        - containerPort: 443
      volumes:
        - name: keydata
          persistentVolumeClaim:
            claimName: keys-azurefile  
    